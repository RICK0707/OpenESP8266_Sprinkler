<VisualMicro>
  <Program Name="interval_program_v2" Ext=".ino" Location="d:\Users\pbecc\OneDrive\Arduino\OpenSprinkler\OpenSprinkler_Arduino_V_2_0_0\interval_program_v2">
    <Compile CompilerErrors="0" ConfigurationName="Debug" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" ReCompileIfSourceIsNewer="1" BuildPath="d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2" IsDebugStart="1" SketchName="interval_program_v2" ReportDigitalPins="0" ReportAnalogPins="0" ReportI2C="0" ReportFreeMemory="0" IncludeDebug="1" LastDebugPreProcessorDefinitions="VM_DEBUG;VM_DEBUG_ENABLE 1;VM_DEBUG_BANDWIDTH_THROTTLE_MS 100;VM_DEBUGGER_TYPE_HARDWARESERIAL 0;VM_DEBUGGER_TYPE_SOFTWARESERIAL 1;VM_DEBUGGER_TYPE_FASTSERIAL 2;VM_DEBUGGER_TYPE_USB 3;VM_DEBUGGER_TYPE_TEENSY 4;VM_DEBUGGER_TYPE_UART 5;VM_DEBUGGER_TYPE_USART 6;VM_DEBUGGER_TYPE_USBSERIAL 7;VM_DEBUGGER_TYPE_TTYUART 8;VM_DEBUGGER_TYPE_NET_CONSOLE 9;VM_DEBUGGER_TYPE_Uart 10;VM_DEBUGGER_TYPE_COSA 11;VM_DEBUGGER_TYPE_CDCSerialClass 12;VM_DEBUGGER_TYPE VM_DEBUGGER_TYPE_HARDWARESERIAL;VM_DEBUG_BREAKPAUSE;" IncludesDebug="1" IsCompiled="1" />
    <Platform Name="arduino16x" Package="esp8266" Platform="esp8266" Architecture="1.20.0-26-gb404fb9-2">
      <Board Name="esp8266_nodemcuv2" Description="NodeMCU 1.0 (ESP-12E Module)" CoreFolder="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\cores\esp8266" VariantFullPath="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\variants\nodemcu" McuIdePath="d:\Program Files\Arduino" McuSketchBookPath="d:\users\pbecc\onedrive\Arduino" name="NodeMCU 1.0 (ESP-12E Module)" upload.tool="esptool" upload.speed="115200" upload.resetmethod="nodemcu" upload.maximum_size="1044464" upload.maximum_data_size="81920" upload.wait_for_upload_port="true" serial.disableDTR="true" serial.disableRTS="true" build.mcu="esp8266" build.f_cpu="80000000L" build.board="ESP8266_ESP12" build.core="esp8266" build.variant="nodemcu" build.flash_mode="dio" build.flash_size="4M" build.flash_freq="40" menu.CpuFrequency.80="80 MHz" menu.CpuFrequency.80.build.f_cpu="80000000L" menu.CpuFrequency.160="160 MHz" menu.CpuFrequency.160.build.f_cpu="160000000L" menu.UploadTool.esptool="Serial" menu.UploadTool.esptool.upload.tool="esptool" menu.UploadTool.esptool.upload.verbose="-vv" menu.UploadTool.espota="OTA" menu.UploadTool.espota.upload.tool="espota" menu.UploadSpeed.115200="115200" menu.UploadSpeed.115200.upload.speed="115200" menu.UploadSpeed.9600="9600" menu.UploadSpeed.9600.upload.speed="9600" menu.UploadSpeed.57600="57600" menu.UploadSpeed.57600.upload.speed="57600" menu.UploadSpeed.256000.windows="256000" menu.UploadSpeed.256000.upload.speed="256000" menu.UploadSpeed.230400.linux="230400" menu.UploadSpeed.230400.macosx="230400" menu.UploadSpeed.230400.upload.speed="230400" menu.UploadSpeed.460800.linux="460800" menu.UploadSpeed.460800.macosx="460800" menu.UploadSpeed.460800.upload.speed="460800" menu.UploadSpeed.512000.windows="512000" menu.UploadSpeed.512000.upload.speed="512000" menu.UploadSpeed.921600="921600" menu.UploadSpeed.921600.upload.speed="921600" menu.FlashSize.4M3M="4M (3M SPIFFS)" menu.FlashSize.4M3M.build.flash_size="4M" menu.FlashSize.4M3M.build.flash_ld="eagle.flash.4m.ld" menu.FlashSize.4M3M.build.spiffs_start="0x100000" menu.FlashSize.4M3M.build.spiffs_end="0x3FB000" menu.FlashSize.4M3M.build.spiffs_blocksize="8192" menu.FlashSize.4M3M.build.spiffs_pagesize="256" menu.FlashSize.4M1M="4M (1M SPIFFS)" menu.FlashSize.4M1M.build.flash_size="4M" menu.FlashSize.4M1M.build.flash_ld="eagle.flash.4m1m.ld" menu.FlashSize.4M1M.build.spiffs_start="0x300000" menu.FlashSize.4M1M.build.spiffs_end="0x3FB000" menu.FlashSize.4M1M.build.spiffs_blocksize="8192" menu.FlashSize.4M1M.build.spiffs_pagesize="256" menu.UploadSpeed.256000="256000" menu.UploadSpeed.512000="512000" runtime.ide.path="d:\Program Files\Arduino" build.system.path="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\system" runtime.ide.version="10605" target_package="esp8266" target_platform="esp8266" runtime.hardware.path="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266" originalid="nodemcuv2" intellisense.tools.path="{compiler.toolchain.path}" intellisense.include.paths="{runtime.tools.xtensa-lx106-elf-gcc.path}\xtensa-lx106-elf\include\c++\4.8.2;{runtime.tools.xtensa-lx106-elf-gcc.path}\xtensa-lx106-elf\include\c++\4.8.2\xtensa-lx106-elf;{runtime.tools.xtensa-lx106-elf-gcc.path}\xtensa-lx106-elf\include;{runtime.tools.xtensa-lx106-elf-gcc.path}\lib\gcc\xtensa-lx106-elf\4.8.2\include;{runtime.platform.path}\tools\sdk\include" version="1.6.4" compiler.path="{runtime.tools.xtensa-lx106-elf-gcc.path}/bin/" compiler.sdk.path="{runtime.platform.path}/tools/sdk" compiler.cpreprocessor.flags="-D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ &quot;-I{compiler.sdk.path}/include&quot;" compiler.c.cmd="xtensa-lx106-elf-gcc" compiler.c.flags="-c -Os -g -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -std=gnu99 -ffunction-sections -fdata-sections" compiler.S.cmd="xtensa-lx106-elf-gcc" compiler.S.flags="-c -g -x assembler-with-cpp -MMD" compiler.c.elf.flags="-g -Os -nostdlib -Wl,--no-check-sections -u call_user_start -Wl,-static &quot;-L{compiler.sdk.path}/lib&quot; &quot;-L{compiler.sdk.path}/ld&quot; &quot;-T{build.flash_ld}&quot; -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,register_chipv6_phy" compiler.c.elf.cmd="xtensa-lx106-elf-gcc" compiler.c.elf.libs="-lm -lgcc -lhal -lphy -lnet80211 -llwip -lwpa -lmain -lpp -lsmartconfig -lwps -lcrypto -laxtls" compiler.cpp.cmd="xtensa-lx106-elf-g++" compiler.cpp.flags="-c -Os -g -mlongcalls -mtext-section-literals -fno-exceptions -fno-rtti -falign-functions=4 -std=c++11 -MMD -ffunction-sections -fdata-sections" compiler.as.cmd="xtensa-lx106-elf-as" compiler.ar.cmd="xtensa-lx106-elf-ar" compiler.ar.flags="cru" compiler.elf2hex.cmd="esptool" compiler.elf2hex.flags="" compiler.size.cmd="xtensa-lx106-elf-size" compiler.esptool.cmd="esptool.exe" compiler.esptool.cmd.windows="esptool.exe" build.extra_flags="-DESP8266" compiler.c.extra_flags="" compiler.c.elf.extra_flags="" compiler.S.extra_flags="" compiler.cpp.extra_flags="" compiler.ar.extra_flags="" compiler.objcopy.eep.extra_flags="" compiler.elf2hex.extra_flags="" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.cpreprocessor.flags} {compiler.c.flags} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpreprocessor.flags} {compiler.cpp.flags} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.S.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.cpreprocessor.flags} {compiler.S.flags} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{build.path}/{archive_file}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot; {compiler.c.elf.flags} {compiler.c.elf.extra_flags} -o &quot;{build.path}/{build.project_name}.elf&quot; -Wl,--start-group {object_files} &quot;{build.path}/{archive_file}&quot; {compiler.c.elf.libs} -Wl,--end-group  &quot;-L{build.path}&quot;" recipe.objcopy.eep.pattern="" recipe.objcopy.hex.pattern="&quot;{runtime.tools.esptool.path}/{compiler.esptool.cmd}&quot; -eo &quot;{runtime.platform.path}/bootloaders/eboot/eboot.elf&quot; -bo &quot;{build.path}/{build.project_name}.bin&quot; -bm {build.flash_mode} -bf {build.flash_freq} -bz {build.flash_size} -bs .text -bp 4096 -ec -eo &quot;{build.path}/{build.project_name}.elf&quot; -bs .irom0.text -bs .text -bs .data -bs .rodata -bc -ec" recipe.output.tmp_file="{build.project_name}.bin" recipe.output.save_file="{build.project_name}.{build.variant}.bin" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;" recipe.size.regex="^(?:\.irom0\.text|\.text|\.data|\.rodata|)\s+([0-9]+).*" recipe.size.regex.data="^(?:\.data|\.rodata|\.bss)\s+([0-9]+).*" tools.esptool.cmd="esptool.exe" tools.esptool.cmd.windows="esptool.exe" tools.esptool.path="{runtime.tools.esptool.path}" tools.esptool.network_cmd="python.exe" tools.esptool.network_cmd.windows="python.exe" tools.esptool.upload.protocol="esp" tools.esptool.upload.params.verbose="-vv" tools.esptool.upload.params.quiet="" tools.esptool.upload.pattern="&quot;{path}/{cmd}&quot; {upload.verbose} -cd {upload.resetmethod} -cb {upload.speed} -cp &quot;{serial.port}&quot; -ca 0x00000 -cf &quot;{build.path}/{build.project_name}.bin&quot;" tools.esptool.upload.network_pattern="&quot;{network_cmd}&quot; &quot;{runtime.platform.path}/tools/espota.py&quot; -i &quot;{serial.port}&quot; -p &quot;{network.port}&quot; &quot;--auth={network.password}&quot; -f &quot;{build.path}/{build.project_name}.bin&quot;" tools.mkspiffs.cmd="mkspiffs.exe" tools.mkspiffs.cmd.windows="mkspiffs.exe" tools.mkspiffs.path="{runtime.tools.mkspiffs.path}" tools.espota.cmd="python.exe" tools.espota.cmd.windows="python.exe" tools.espota.path="{runtime.platform.path}/tools" tools.espota.upload.protocol="espota" tools.espota.upload.params.verbose="" tools.espota.upload.params.quiet="" tools.espota.upload.pattern="&quot;{cmd}&quot; &quot;{path}/espota.py&quot; -i &quot;{serial.port}&quot; -p 8266 -f &quot;{build.path}/{build.project_name}.bin&quot;" vm.platform.root.path="D:\Program Files\VisualStudio\Common7\IDE\Extensions\3r5ldoi0.jlp\Micro Platforms\arduino16x" runtime.tools.avrdude.path="d:\Program Files\Arduino\hardware\tools\avr" runtime.tools.avrdude-6.0.1-arduino5.path="d:\Program Files\Arduino\hardware\tools\avr" runtime.tools.avr-gcc.path="d:\Program Files\Arduino\hardware\tools\avr" runtime.tools.avr-gcc-4.8.1-arduino5.path="d:\Program Files\Arduino\hardware\tools\avr" runtime.tools.esptool.path="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\tools\esptool\0.4.6" runtime.tools.esptool-0.4.6.path="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\tools\esptool\0.4.6" runtime.tools.mkspiffs.path="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\tools\mkspiffs\0.1.2" runtime.tools.mkspiffs-0.1.2.path="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\tools\mkspiffs\0.1.2" runtime.tools.xtensa-lx106-elf-gcc.path="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\tools\xtensa-lx106-elf-gcc\1.20.0-26-gb404fb9-2" runtime.tools.xtensa-lx106-elf-gcc-1.20.0-26-gb404fb9-2.path="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\tools\xtensa-lx106-elf-gcc\1.20.0-26-gb404fb9-2" ide.hint="For use with Arduino.cc 1.6.2+ ide" ide.location.key="Arduino16x" ide.location.ide.winreg="Arduino 1.6.x Application" ide.location.sketchbook.winreg="Arduino 1.6.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.default.revision_name="1.6.7" ide.default.version="10607" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="arduino.h" ide.exe_name="arduino" ide.platformswithoutpackage="false" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionGTEQ="160" ide.exe="arduino.exe" ide.hosts="atmel" ide.url="http://arduino.cc/en/Main/Software" ide.help.reference.path="reference\arduino.cc\en\Reference" ide.help.reference.path2="reference\www.arduino.cc\en\Reference" ide.help.reference.serial="reference\www.arduino.cc\en\Serial" vm.debug="true" software="ARDUINO" ssh.user.name="root" ssh.user.default.password="arduino" ssh.host.wwwfiles.path="/www/sd" build.working_directory="{runtime.ide.path}" ide.location.preferences.portable="{runtime.ide.path}\portable" ide.location.preferences="%VM_APPDATA_LOCAL%\arduino15\preferences.txt" ide.location.preferences_fallback="%VM_APPDATA_ROAMING%\arduino15\preferences.txt" ide.location.contributions="%VM_APPDATA_LOCAL%\arduino15" ide.location.contributions_fallback="%VM_APPDATA_ROAMING%\arduino15" ide.contributions.boards.allow="true" ide.contributions.boards.ignore_unless_rewrite_found="true" ide.contributions.libraries.allow="true" ide.contributions.boards.support.urls.wiki="https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls" ide.create_platforms_from_boardsTXT.teensy="build.core" ide.appid="arduino16x" location.sketchbook="d:\users\pbecc\onedrive\Arduino" build.core.vmresolved="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\cores\esp8266" build.core.parentfolder.vmresolved="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\cores" build.core.coresparentfolder.vmresolved="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2" vm.core.include="arduino.h" vm.boardsource.path="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2" runtime.platform.path="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2" vm.platformname.name="esp8266" build.arch="ESP8266" build.flash_ld="eagle.flash.4m.ld" build.spiffs_start="0x100000" build.spiffs_end="0x3FB000" build.spiffs_blocksize="8192" build.spiffs_pagesize="256" upload.verbose="-vv" build.variant.vmresolved="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\variants\nodemcu" build.architecture="1.20.0-26-gb404fb9-2" vmresolved.compiler.path="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\tools\xtensa-lx106-elf-gcc\1.20.0-26-gb404fb9-2\bin\" vmresolved.tools.path="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\tools\xtensa-lx106-elf-gcc\1.20.0-26-gb404fb9-2" vm.runtime.compiler.showwarnings="true" vm.runtime.compiler.auto_discover_includes="true" vm.last.buildpath="d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2" vm.build.verbose_build_properties="false" build.source.path="d:\Users\pbecc\OneDrive\Arduino\OpenSprinkler\OpenSprinkler_Arduino_V_2_0_0\interval_program_v2\interval_program_v2.ino" build.path="d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2" PreProcessor.HeaderCount="1" PreProcessor.PrototypeCount="41" vm.last.preproc.file.0.file="interval_program_v2.ino" vm.last.preproc.file.0.offset="1" vm.last.preproc.file.0.length="9767" vm.last.preproc.file.0.linecount="561" vm.last.preproc.file.0.linestart="0" vm.last.preproc.file.0.lineend="561" vm.last.preproc.file.0.prefix_lines="0" vm.last.preproc.file.1.file="EtherCard_W5100.cpp" vm.last.preproc.file.1.offset="0" vm.last.preproc.file.1.length="11402" vm.last.preproc.file.1.linecount="482" vm.last.preproc.file.1.linestart="561" vm.last.preproc.file.1.lineend="1043" vm.last.preproc.file.1.prefix_lines="0" vm.last.preproc.file.2.file="EtherCard_W5100.h" vm.last.preproc.file.2.offset="0" vm.last.preproc.file.2.length="5752" vm.last.preproc.file.2.linecount="189" vm.last.preproc.file.2.linestart="1043" vm.last.preproc.file.2.lineend="1232" vm.last.preproc.file.2.prefix_lines="0" vm.last.preproc.file.3.file="OpenSprinklerGen2.h" vm.last.preproc.file.3.offset="0" vm.last.preproc.file.3.length="6186" vm.last.preproc.file.3.linecount="150" vm.last.preproc.file.3.linestart="1232" vm.last.preproc.file.3.lineend="1382" vm.last.preproc.file.3.prefix_lines="0" vm.last.preproc.file.4.file="OpenSprinklerGen2.ino" vm.last.preproc.file.4.offset="562" vm.last.preproc.file.4.length="21201" vm.last.preproc.file.4.linecount="995" vm.last.preproc.file.4.linestart="1382" vm.last.preproc.file.4.lineend="2377" vm.last.preproc.file.4.prefix_lines="0" vm.last.preproc.file.5.file="defines.h" vm.last.preproc.file.5.offset="0" vm.last.preproc.file.5.length="9377" vm.last.preproc.file.5.linecount="234" vm.last.preproc.file.5.linestart="2377" vm.last.preproc.file.5.lineend="2611" vm.last.preproc.file.5.prefix_lines="0" vm.last.preproc.file.6.file="eeprom_mio.ino" vm.last.preproc.file.6.offset="1557" vm.last.preproc.file.6.length="5060" vm.last.preproc.file.6.linecount="95" vm.last.preproc.file.6.linestart="2611" vm.last.preproc.file.6.lineend="2706" vm.last.preproc.file.6.prefix_lines="0" vm.last.preproc.file.7.file="lcd_mio.cpp" vm.last.preproc.file.7.offset="0" vm.last.preproc.file.7.length="714" vm.last.preproc.file.7.linecount="25" vm.last.preproc.file.7.linestart="2706" vm.last.preproc.file.7.lineend="2731" vm.last.preproc.file.7.prefix_lines="0" vm.last.preproc.file.8.file="lcd_mio.h" vm.last.preproc.file.8.offset="0" vm.last.preproc.file.8.length="515" vm.last.preproc.file.8.linecount="39" vm.last.preproc.file.8.linestart="2731" vm.last.preproc.file.8.lineend="2770" vm.last.preproc.file.8.prefix_lines="0" vm.last.preproc.file.9.file="program.h" vm.last.preproc.file.9.offset="0" vm.last.preproc.file.9.length="2654" vm.last.preproc.file.9.linecount="79" vm.last.preproc.file.9.linestart="2770" vm.last.preproc.file.9.lineend="2849" vm.last.preproc.file.9.prefix_lines="0" vm.last.preproc.file.10.file="program.ino" vm.last.preproc.file.10.offset="1652" vm.last.preproc.file.10.length="5049" vm.last.preproc.file.10.linecount="159" vm.last.preproc.file.10.linestart="2849" vm.last.preproc.file.10.lineend="3008" vm.last.preproc.file.10.prefix_lines="0" vm.last.preproc.file.11.file="resource.h" vm.last.preproc.file.11.offset="0" vm.last.preproc.file.11.length="427" vm.last.preproc.file.11.linecount="15" vm.last.preproc.file.11.linestart="3008" vm.last.preproc.file.11.lineend="3023" vm.last.preproc.file.11.prefix_lines="0" vm.last.preproc.file.12.file="server.ino" vm.last.preproc.file.12.offset="1811" vm.last.preproc.file.12.length="25887" vm.last.preproc.file.12.linecount="888" vm.last.preproc.file.12.linestart="3023" vm.last.preproc.file.12.lineend="3911" vm.last.preproc.file.12.prefix_lines="0" serial.port.file="COM4" serial.port="COM4" serial.port.num="4" sketch_path="d:\Users\pbecc\OneDrive\Arduino\OpenSprinkler\OpenSprinkler_Arduino_V_2_0_0\interval_program_v2" build.project_name="interval_program_v2.ino" runtime.vm.ide.platforms.path="D:\Program Files\VisualStudio\Common7\IDE\Extensions\3r5ldoi0.jlp\Micro Platforms" build.variant.path="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\variants\nodemcu" build.core.path="d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\cores\esp8266" archive_file="core.a" archive_file_path="d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\core.a" extra.time.local="74694698" vm_all_includes=" -I&quot;d:\Users\pbecc\OneDrive\Arduino\OpenSprinkler\OpenSprinkler_Arduino_V_2_0_0\interval_program_v2&quot;  -I&quot;d:\users\pbecc\onedrive\Arduino\libraries\DS1307RTC-master&quot;  -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\libraries\ESP8266WiFi\src&quot;  -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\libraries\Ethernet\src&quot;  -I&quot;d:\Program Files\Arduino\libraries\LiquidCrystal\src&quot;  -I&quot;d:\users\pbecc\onedrive\Arduino\libraries\MemoryFree&quot;  -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\libraries\SPI&quot;  -I&quot;d:\users\pbecc\onedrive\Arduino\libraries\Time&quot;  -I&quot;d:\users\pbecc\onedrive\Arduino\libraries\TimeAlarms&quot;  -I&quot;D:\Program Files\VisualStudio\Common7\IDE\Extensions\3r5ldoi0.jlp\Micro Platforms\default\debuggers\VM_DBG&quot;  -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\libraries\Wire&quot;  -I&quot;d:\Program Files\Arduino\libraries&quot;  -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\libraries&quot;  -I&quot;D:\Program Files\VisualStudio\Common7\IDE\Extensions\3r5ldoi0.jlp\Micro Platforms\default\debuggers&quot;  -I&quot;d:\users\pbecc\onedrive\Arduino\libraries&quot;  -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\cores\esp8266&quot;  -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\variants\nodemcu&quot; " vm_core_includes=" -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\cores\esp8266&quot;  -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\variants\nodemcu&quot; " includes=" -I&quot;d:\Users\pbecc\OneDrive\Arduino\OpenSprinkler\OpenSprinkler_Arduino_V_2_0_0\interval_program_v2&quot;  -I&quot;d:\users\pbecc\onedrive\Arduino\libraries\DS1307RTC-master&quot;  -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\libraries\ESP8266WiFi\src&quot;  -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\libraries\Ethernet\src&quot;  -I&quot;d:\Program Files\Arduino\libraries\LiquidCrystal\src&quot;  -I&quot;d:\users\pbecc\onedrive\Arduino\libraries\MemoryFree&quot;  -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\libraries\SPI&quot;  -I&quot;d:\users\pbecc\onedrive\Arduino\libraries\Time&quot;  -I&quot;d:\users\pbecc\onedrive\Arduino\libraries\TimeAlarms&quot;  -I&quot;D:\Program Files\VisualStudio\Common7\IDE\Extensions\3r5ldoi0.jlp\Micro Platforms\default\debuggers\VM_DBG&quot;  -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\libraries\Wire&quot;  -I&quot;d:\Program Files\Arduino\libraries&quot;  -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\libraries&quot;  -I&quot;D:\Program Files\VisualStudio\Common7\IDE\Extensions\3r5ldoi0.jlp\Micro Platforms\default\debuggers&quot;  -I&quot;d:\users\pbecc\onedrive\Arduino\libraries&quot;  -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\cores\esp8266&quot;  -I&quot;d:\Users\pbecc\AppData\Local\arduino15\packages\esp8266\hardware\esp8266\2.0.0-rc2\variants\nodemcu&quot; " build.path_sketch="d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2" build.path_core="d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\core" build.path_libraries="d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2" object_file="d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\lcd_mio.cpp.o" source_file="d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\lcd_mio.cpp" object_files=" &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\DS1307RTC-master\DS1307RTC.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\ESP8266WiFi\ESP8266WiFi.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\ESP8266WiFi\ESP8266WiFiMulti.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\ESP8266WiFi\WiFiClient.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\ESP8266WiFi\WiFiClientSecure.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\ESP8266WiFi\WiFiServer.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\ESP8266WiFi\WiFiUdp.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\Ethernet\Dhcp.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\Ethernet\Dns.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\Ethernet\Ethernet.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\Ethernet\EthernetClient.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\Ethernet\EthernetServer.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\Ethernet\EthernetUdp.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\Ethernet\utility\socket.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\Ethernet\utility\w5100.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\LiquidCrystal\LiquidCrystal.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\MemoryFree\MemoryFree.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\SPI\SPI.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\Time\DateStrings.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\Time\Time.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\TimeAlarms\TimeAlarms.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\VM_DBG\VM_mem_check.c.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\VM_DBG\VM_DBG.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\Wire\Wire.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\interval_program_v2.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\EtherCard_W5100.cpp.o&quot;  &quot;d:\Users\pbecc\AppData\Local\V.Micro\Arduino\Builds\interval_program_v2\esp8266_nodemcuv2\lcd_mio.cpp.o&quot; " />
    </Platform>
    <Debug EnableBreak="1" DebugEnabled="1" IsGdb="0" RemotePortSpeedWrittenToDebugSource="115200" />
    <VCCodeModel>
      <VCCodeMacros />
    </VCCodeModel>
    <BreakPoints>
      <BreakPoint Index="1" Name="interval_program_v2.ino, riga 152" Id="1a7164c3-f803-4952-824c-88b7a36467ac" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\interval_program_v2.ino" FileLine="152" FileColumn="1" FunctionName="setup()" FunctionLineOffset="5" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='1a7164c3-f803-4952-824c-88b7a36467ac'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>145	// ======================
146	// Arduino Setup Function
147	// ======================
148	void setup() { 
149		Wire.begin();
150		delay(10);
151	
--&gt;152	  svc.begin();          // OpenSprinkler init
153	  
154	  svc.options_setup();  // Setup options
155	  
156	  pd.init();            // ProgramData init
157	
158	  // calculate http port number
159	  myport = (int)(svc.options[OPTION_HTTPPORT_1].value&lt;&lt;8) + (int)svc.options[OPTION_HTTPPORT_0].value;
160	
161	  setSyncInterval(RTC_SYNC_INTERVAL);  // RTC sync interval: 15 minutes
</Source>
      </BreakPoint>
      <BreakPoint Index="2" Name="interval_program_v2.ino, riga 156" Id="a53e3809-e701-43da-97b1-bc064ae8052c" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\interval_program_v2.ino" FileLine="156" FileColumn="1" FunctionName="setup()" FunctionLineOffset="9" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='a53e3809-e701-43da-97b1-bc064ae8052c'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>149		Wire.begin();
150		delay(10);
151	
152	  svc.begin();          // OpenSprinkler init
153	  
154	  svc.options_setup();  // Setup options
155	  
--&gt;156	  pd.init();            // ProgramData init
157	
158	  // calculate http port number
159	  myport = (int)(svc.options[OPTION_HTTPPORT_1].value&lt;&lt;8) + (int)svc.options[OPTION_HTTPPORT_0].value;
160	
161	  setSyncInterval(RTC_SYNC_INTERVAL);  // RTC sync interval: 15 minutes
162	  // if rtc exists, sets it as time sync source
163	  setSyncProvider(svc.status.has_rtc ? RTC.get : NULL);
164	  tmElements_t tm;
165	
</Source>
      </BreakPoint>
      <BreakPoint Index="3" Name="interval_program_v2.ino, riga 150" Id="011ada1e-3fa8-4cad-b2f0-381042decd30" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\interval_program_v2.ino" FileLine="150" FileColumn="1" FunctionName="setup()" FunctionLineOffset="3" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='011ada1e-3fa8-4cad-b2f0-381042decd30'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>143	}
144	
145	// ======================
146	// Arduino Setup Function
147	// ======================
148	void setup() { 
149		Wire.begin();
--&gt;150		delay(10);
151	
152	  svc.begin();          // OpenSprinkler init
153	  
154	  svc.options_setup();  // Setup options
155	  
156	  pd.init();            // ProgramData init
157	
158	  // calculate http port number
159	  myport = (int)(svc.options[OPTION_HTTPPORT_1].value&lt;&lt;8) + (int)svc.options[OPTION_HTTPPORT_0].value;
</Source>
      </BreakPoint>
      <BreakPoint Index="4" Name="interval_program_v2.ino, riga 434" Id="5994b79e-5976-4397-bc58-4085985af340" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\interval_program_v2.ino" FileLine="434" FileColumn="1" FunctionName="manual_station_on(byte sid, int ontimer)" FunctionLineOffset="10" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='5994b79e-5976-4397-bc58-4085985af340'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>427	  // set station start time (now)
428	  pd.scheduled_start_time[sid] = curr_time + 1;
429	  if (ontimer == 0) {
430	    pd.scheduled_stop_time[sid] = ULONG_MAX-1;
431	  } 
432	  else { 
433	    pd.scheduled_stop_time[sid] = pd.scheduled_start_time[sid] + ontimer;
--&gt;434	  }
435	  // set program index
436	  pd.scheduled_program_index[sid] = 99;
437	  svc.status.program_busy = 1;
438	}
439	
440	void perform_ntp_sync(unsigned long curr_time) {
441	  static unsigned long last_sync_time = 0;
442	  // do not perform sync if this option is disabled, or if network is not available
443	  if (svc.options[OPTION_USE_NTP].value==0 || svc.status.network_fails&gt;0) return;   
</Source>
      </BreakPoint>
      <BreakPoint Index="5" Name="interval_program_v2.ino, riga 154" Id="34ee29d3-b4fa-4ecc-80bd-d35f48616ef9" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\interval_program_v2.ino" FileLine="154" FileColumn="1" FunctionName="setup()" FunctionLineOffset="7" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='34ee29d3-b4fa-4ecc-80bd-d35f48616ef9'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>147	// ======================
148	void setup() { 
149		Wire.begin();
150		delay(10);
151	
152	  svc.begin();          // OpenSprinkler init
153	  
--&gt;154	  svc.options_setup();  // Setup options
155	  
156	  pd.init();            // ProgramData init
157	
158	  // calculate http port number
159	  myport = (int)(svc.options[OPTION_HTTPPORT_1].value&lt;&lt;8) + (int)svc.options[OPTION_HTTPPORT_0].value;
160	
161	  setSyncInterval(RTC_SYNC_INTERVAL);  // RTC sync interval: 15 minutes
162	  // if rtc exists, sets it as time sync source
163	  setSyncProvider(svc.status.has_rtc ? RTC.get : NULL);
</Source>
      </BreakPoint>
      <BreakPoint Index="6" Name="OpenSprinklerGen2.ino, riga 407" Id="59901287-5022-4c20-ab77-8a90b3b8a265" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\opensprinklergen2.ino" FileLine="407" FileColumn="1" FunctionName="options_setup()" FunctionLineOffset="7" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='59901287-5022-4c20-ab77-8a90b3b8a265'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>400	
401	void OpenSprinkler::options_setup() {
402	
403	  // add 0.5 second delay to allow EEPROM to stablize
404	  delay(500);
405	
406	  // check reset condition: either firmware version has changed, or reset flag is up
--&gt;407	  byte curr_ver = eeprom_read_byte((unsigned char*)(ADDR_EEPROM_OPTIONS+OPTION_FW_VERSION));
408	  if (curr_ver&lt;100) curr_ver = curr_ver*10; // adding a default 0 if version number is the old type
409	  if (curr_ver != SVC_FW_VERSION || eeprom_read_byte((unsigned char*)(ADDR_EEPROM_OPTIONS+OPTION_RESET))==0xAA) {
410	
411	    //======== Reset EEPROM data ========
412	    options_save(); // write default option values
413	    eeprom_string_set(ADDR_EEPROM_PASSWORD, DEFAULT_PASSWORD);  // write default password
414	    eeprom_string_set(ADDR_EEPROM_LOCATION, DEFAULT_LOCATION);  // write default location
415	
416	    lcd_print_line_clear_pgm(PSTR("Resetting EEPROM"), 0);
</Source>
      </BreakPoint>
      <BreakPoint Index="7" Name="OpenSprinklerGen2.ino, riga 413" Id="13540bba-240b-4bd4-b9d1-4ca277cd415b" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\opensprinklergen2.ino" FileLine="413" FileColumn="1" FunctionName="options_setup()" FunctionLineOffset="13" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='13540bba-240b-4bd4-b9d1-4ca277cd415b'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>406	  // check reset condition: either firmware version has changed, or reset flag is up
407	  byte curr_ver = eeprom_read_byte((unsigned char*)(ADDR_EEPROM_OPTIONS+OPTION_FW_VERSION));
408	  if (curr_ver&lt;100) curr_ver = curr_ver*10; // adding a default 0 if version number is the old type
409	  if (curr_ver != SVC_FW_VERSION || eeprom_read_byte((unsigned char*)(ADDR_EEPROM_OPTIONS+OPTION_RESET))==0xAA) {
410	
411	    //======== Reset EEPROM data ========
412	    options_save(); // write default option values
--&gt;413	    eeprom_string_set(ADDR_EEPROM_PASSWORD, DEFAULT_PASSWORD);  // write default password
414	    eeprom_string_set(ADDR_EEPROM_LOCATION, DEFAULT_LOCATION);  // write default location
415	
416	    lcd_print_line_clear_pgm(PSTR("Resetting EEPROM"), 0);
417	    lcd_print_line_clear_pgm(PSTR("Please Wait..."), 1);  
418	
419	    int i, sn;
420	    for(i=ADDR_EEPROM_STN_NAMES; i&lt;INT_EEPROM_SIZE; i++) {
421	      eeprom_write_byte((unsigned char *) i, 0);      
422	    }
</Source>
      </BreakPoint>
      <BreakPoint Index="8" Name="OpenSprinklerGen2.ino, riga 412" Id="30c41e6d-6b43-4894-ac46-bcd9ccf654d2" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\opensprinklergen2.ino" FileLine="412" FileColumn="1" FunctionName="options_setup()" FunctionLineOffset="12" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='30c41e6d-6b43-4894-ac46-bcd9ccf654d2'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>405	
406	  // check reset condition: either firmware version has changed, or reset flag is up
407	  byte curr_ver = eeprom_read_byte((unsigned char*)(ADDR_EEPROM_OPTIONS+OPTION_FW_VERSION));
408	  if (curr_ver&lt;100) curr_ver = curr_ver*10; // adding a default 0 if version number is the old type
409	  if (curr_ver != SVC_FW_VERSION || eeprom_read_byte((unsigned char*)(ADDR_EEPROM_OPTIONS+OPTION_RESET))==0xAA) {
410	
411	    //======== Reset EEPROM data ========
--&gt;412	    options_save(); // write default option values
413	    eeprom_string_set(ADDR_EEPROM_PASSWORD, DEFAULT_PASSWORD);  // write default password
414	    eeprom_string_set(ADDR_EEPROM_LOCATION, DEFAULT_LOCATION);  // write default location
415	
416	    lcd_print_line_clear_pgm(PSTR("Resetting EEPROM"), 0);
417	    lcd_print_line_clear_pgm(PSTR("Please Wait..."), 1);  
418	
419	    int i, sn;
420	    for(i=ADDR_EEPROM_STN_NAMES; i&lt;INT_EEPROM_SIZE; i++) {
421	      eeprom_write_byte((unsigned char *) i, 0);      
</Source>
      </BreakPoint>
      <BreakPoint Index="9" Name="OpenSprinklerGen2.ino, riga 416" Id="185979af-d371-4451-8a86-b5f7bcad03b3" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\opensprinklergen2.ino" FileLine="416" FileColumn="1" FunctionName="options_setup()" FunctionLineOffset="16" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='185979af-d371-4451-8a86-b5f7bcad03b3'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>409	  if (curr_ver != SVC_FW_VERSION || eeprom_read_byte((unsigned char*)(ADDR_EEPROM_OPTIONS+OPTION_RESET))==0xAA) {
410	
411	    //======== Reset EEPROM data ========
412	    options_save(); // write default option values
413	    eeprom_string_set(ADDR_EEPROM_PASSWORD, DEFAULT_PASSWORD);  // write default password
414	    eeprom_string_set(ADDR_EEPROM_LOCATION, DEFAULT_LOCATION);  // write default location
415	
--&gt;416	    lcd_print_line_clear_pgm(PSTR("Resetting EEPROM"), 0);
417	    lcd_print_line_clear_pgm(PSTR("Please Wait..."), 1);  
418	
419	    int i, sn;
420	    for(i=ADDR_EEPROM_STN_NAMES; i&lt;INT_EEPROM_SIZE; i++) {
421	      eeprom_write_byte((unsigned char *) i, 0);      
422	    }
423	
424	    // reset station names
425	    for(i=ADDR_EEPROM_STN_NAMES, sn=1; i&lt;ADDR_EEPROM_RUNONCE; i+=STATION_NAME_SIZE, sn++) {
</Source>
      </BreakPoint>
      <BreakPoint Index="10" Name="OpenSprinklerGen2.ino, riga 439" Id="b8b12145-1c4b-405a-ab17-2cbcc4af656c" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\opensprinklergen2.ino" FileLine="439" FileColumn="1" FunctionName="options_setup()" FunctionLineOffset="39" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='b8b12145-1c4b-405a-ab17-2cbcc4af656c'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>432	    for(i=ADDR_EEPROM_MAS_OP; i&lt;ADDR_EEPROM_MAS_OP+(MAX_EXT_BOARDS+1); i++) {
433	      // default master operation bits on
434	      eeprom_write_byte((unsigned char *)i, 0xff);
435	    }
436	    //======== END OF EEPROM RESET CODE ========
437	
438	    // restart after resetting EEPROM.
--&gt;439	    delay(500);
440	    reboot();
441	  } 
442	  else {
443	    options_load(); // load option values
444	    masop_load();   // load master operation bits
445	  }
446	
447	  byte button = button_read(BUTTON_WAIT_NONE);
448	
</Source>
      </BreakPoint>
      <BreakPoint Index="11" Name="OpenSprinklerGen2.ino, riga 443" Id="e2cd2ef8-f422-46b7-a369-cff049b00a8c" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\opensprinklergen2.ino" FileLine="443" FileColumn="1" FunctionName="options_setup()" FunctionLineOffset="43" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='e2cd2ef8-f422-46b7-a369-cff049b00a8c'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>436	    //======== END OF EEPROM RESET CODE ========
437	
438	    // restart after resetting EEPROM.
439	    delay(500);
440	    reboot();
441	  } 
442	  else {
--&gt;443	    options_load(); // load option values
444	    masop_load();   // load master operation bits
445	  }
446	
447	  byte button = button_read(BUTTON_WAIT_NONE);
448	
449	  switch(button &amp; BUTTON_MASK) {
450	  case BUTTON_1:
451	    // if BUTTON_1 is pressed during startup, go to self-test
452	    delay(100);
</Source>
      </BreakPoint>
      <BreakPoint Index="12" Name="OpenSprinklerGen2.ino, riga 444" Id="f33e9958-929c-4e83-840d-bfa4e3aa49de" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\opensprinklergen2.ino" FileLine="444" FileColumn="1" FunctionName="options_setup()" FunctionLineOffset="44" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='f33e9958-929c-4e83-840d-bfa4e3aa49de'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>437	
438	    // restart after resetting EEPROM.
439	    delay(500);
440	    reboot();
441	  } 
442	  else {
443	    options_load(); // load option values
--&gt;444	    masop_load();   // load master operation bits
445	  }
446	
447	  byte button = button_read(BUTTON_WAIT_NONE);
448	
449	  switch(button &amp; BUTTON_MASK) {
450	  case BUTTON_1:
451	    // if BUTTON_1 is pressed during startup, go to self-test
452	    delay(100);
453	
</Source>
      </BreakPoint>
      <BreakPoint Index="13" Name="OpenSprinklerGen2.ino, riga 449" Id="07d80f01-8224-4827-b247-9fca14553e6d" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\opensprinklergen2.ino" FileLine="449" FileColumn="1" FunctionName="options_setup()" FunctionLineOffset="49" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='07d80f01-8224-4827-b247-9fca14553e6d'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>442	  else {
443	    options_load(); // load option values
444	    masop_load();   // load master operation bits
445	  }
446	
447	  byte button = button_read(BUTTON_WAIT_NONE);
448	
--&gt;449	  switch(button &amp; BUTTON_MASK) {
450	  case BUTTON_1:
451	    // if BUTTON_1 is pressed during startup, go to self-test
452	    delay(100);
453	
454	    // ===== Added for Freetronics LCD Shield =====
455	    /*
456	    if(digitalRead(PIN_BUTTON_3) == 0) {
457	     // if BUTTON_3 is pressed at the same time
458	     // enter short test
</Source>
      </BreakPoint>
      <BreakPoint Index="14" Name="OpenSprinklerGen2.ino, riga 447" Id="91657aac-97a3-48f6-8342-5ad3b8b837d0" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\opensprinklergen2.ino" FileLine="447" FileColumn="1" FunctionName="options_setup()" FunctionLineOffset="47" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='91657aac-97a3-48f6-8342-5ad3b8b837d0'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>440	    reboot();
441	  } 
442	  else {
443	    options_load(); // load option values
444	    masop_load();   // load master operation bits
445	  }
446	
--&gt;447	  byte button = button_read(BUTTON_WAIT_NONE);
448	
449	  switch(button &amp; BUTTON_MASK) {
450	  case BUTTON_1:
451	    // if BUTTON_1 is pressed during startup, go to self-test
452	    delay(100);
453	
454	    // ===== Added for Freetronics LCD Shield =====
455	    /*
456	    if(digitalRead(PIN_BUTTON_3) == 0) {
</Source>
      </BreakPoint>
      <BreakPoint Index="15" Name="OpenSprinklerGen2.ino, riga 452" Id="0a79034e-abb1-474b-abd3-a53d5d67788b" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\opensprinklergen2.ino" FileLine="452" FileColumn="1" FunctionName="options_setup()" FunctionLineOffset="52" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='0a79034e-abb1-474b-abd3-a53d5d67788b'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>445	  }
446	
447	  byte button = button_read(BUTTON_WAIT_NONE);
448	
449	  switch(button &amp; BUTTON_MASK) {
450	  case BUTTON_1:
451	    // if BUTTON_1 is pressed during startup, go to self-test
--&gt;452	    delay(100);
453	
454	    // ===== Added for Freetronics LCD Shield =====
455	    /*
456	    if(digitalRead(PIN_BUTTON_3) == 0) {
457	     // if BUTTON_3 is pressed at the same time
458	     // enter short test
459	     self_test(800);
460	     } else {
461	     	  self_test((unsigned long)options[OPTION_SELFTEST_TIME].value*1000);
</Source>
      </BreakPoint>
      <BreakPoint Index="16" Name="OpenSprinklerGen2.ino, riga 459" Id="d0ebcf82-b00a-416b-838a-2d9839ffb222" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\opensprinklergen2.ino" FileLine="459" FileColumn="1" FunctionName="options_setup()" FunctionLineOffset="59" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='d0ebcf82-b00a-416b-838a-2d9839ffb222'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>452	    delay(100);
453	
454	    // ===== Added for Freetronics LCD Shield =====
455	    /*
456	    if(digitalRead(PIN_BUTTON_3) == 0) {
457	     // if BUTTON_3 is pressed at the same time
458	     // enter short test
--&gt;459	     self_test(800);
460	     } else {
461	     	  self_test((unsigned long)options[OPTION_SELFTEST_TIME].value*1000);
462	     }
463	     */
464	    // ===== Added for Freetronics LCD Shield =====
465	
466	    self_test((unsigned long)options[OPTION_SELFTEST_TIME].value*1000);
467	    break;
468	
</Source>
      </BreakPoint>
      <BreakPoint Index="17" Name="OpenSprinklerGen2.ino, riga 479" Id="3b2457ae-44ba-4aaa-9dd5-42cb2484fd1f" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\opensprinklergen2.ino" FileLine="479" FileColumn="1" FunctionName="options_setup()" FunctionLineOffset="79" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='3b2457ae-44ba-4aaa-9dd5-42cb2484fd1f'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>472	    if (options[OPTION_RESET].value) {
473	      resetFunc();
474	    }
475	    break;
476	
477	  case BUTTON_3:
478	    // if BUTTON_3 is pressed during startup, enter Setup option mode
--&gt;479	    lcd_print_line_clear_pgm(PSTR("==Set Options=="), 0);
480	    delay(DISPLAY_MSG_MS);
481	    lcd_print_line_clear_pgm(PSTR("B3:sel B1/B2:chg"), 0);
482	    lcd_print_line_clear_pgm(PSTR("B3:hold to save"), 1);
483	    do {
484	      button = button_read(BUTTON_WAIT_NONE);
485	    } 
486	    while (!(button &amp; BUTTON_FLAG_DOWN));
487	    lcd.clear();
488	    ui_set_options(0);
</Source>
      </BreakPoint>
      <BreakPoint Index="18" Name="OpenSprinklerGen2.ino, riga 471" Id="003bc26b-a7b0-42c7-8109-b6ea6517df66" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\opensprinklergen2.ino" FileLine="471" FileColumn="1" FunctionName="options_setup()" FunctionLineOffset="71" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='003bc26b-a7b0-42c7-8109-b6ea6517df66'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>464	    // ===== Added for Freetronics LCD Shield =====
465	
466	    self_test((unsigned long)options[OPTION_SELFTEST_TIME].value*1000);
467	    break;
468	
469	  case BUTTON_2:
470	    // if BUTTON_2 is pressed during startup, go to 'reset all options'
--&gt;471	    ui_set_options(OPTION_RESET);
472	    if (options[OPTION_RESET].value) {
473	      resetFunc();
474	    }
475	    break;
476	
477	  case BUTTON_3:
478	    // if BUTTON_3 is pressed during startup, enter Setup option mode
479	    lcd_print_line_clear_pgm(PSTR("==Set Options=="), 0);
480	    delay(DISPLAY_MSG_MS);
</Source>
      </BreakPoint>
      <BreakPoint Index="19" Name="OpenSprinklerGen2.ino, riga 130" Id="028dfe1c-b23f-4062-bbdb-75e49b95ebc5" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\opensprinklergen2.ino" FileLine="130" FileColumn="1" FunctionName="start_network(byte mymac[], int http_port)" FunctionLineOffset="10" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='028dfe1c-b23f-4062-bbdb-75e49b95ebc5'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>123	  mymac[5] = options[OPTION_DEVICE_ID].value;
124	  if(!ether.begin(ETHER_BUFFER_SIZE, mymac, PIN_ETHER_CS))  return 0;
125	  ether.hisport = http_port;    
126	
127	  if (options[OPTION_USE_DHCP].value) {
128	
129	    // register with domain name "opensprinkler"
--&gt;130	    if (!ether.dhcpSetup("opensprinkler")) return 0;
131	  } 
132	  else {
133	    byte staticip[] = {
134	      options[OPTION_STATIC_IP1].value,
135	      options[OPTION_STATIC_IP2].value,
136	      options[OPTION_STATIC_IP3].value,
137	      options[OPTION_STATIC_IP4].value        };
138	
139	    byte gateway[] = {
</Source>
      </BreakPoint>
      <BreakPoint Index="20" Name="OpenSprinklerGen2.ino, riga 144" Id="06f3dfe4-a5aa-4b72-b131-1841c75bee12" Enabled="1" Message="" MessageTextType="2" PreProcessedMessage="" Condition="" ConditionType="1" CurrentHits="0" File="d:\users\pbecc\onedrive\arduino\opensprinkler\opensprinkler_arduino_v_2_0_0\interval_program_v2\opensprinklergen2.ino" FileLine="144" FileColumn="1" FunctionName="start_network(byte mymac[], int http_port)" FunctionLineOffset="24" FunctionColumnOffset="1" HitCountTarget="1" HitCountType="1" Language="C++" LocationType="3" Tag="&lt;vmbp Id='06f3dfe4-a5aa-4b72-b131-1841c75bee12'/&gt;" Type="1" ToString="System.__ComObject" BreakWhenHit="1">
        <Source>137	      options[OPTION_STATIC_IP4].value        };
138	
139	    byte gateway[] = {
140	      options[OPTION_GATEWAY_IP1].value,
141	      options[OPTION_GATEWAY_IP2].value,
142	      options[OPTION_GATEWAY_IP3].value,
143	      options[OPTION_GATEWAY_IP4].value        };
--&gt;144	    if (!ether.staticSetup(staticip, gateway,gateway))  return 0;
145	  }
146	  return 1;
147	}
148	
149	// Reboot controller
150	void OpenSprinkler::reboot() {
151	  resetFunc();
152	}
153	
</Source>
      </BreakPoint>
    </BreakPoints>
  </Program>
</VisualMicro>